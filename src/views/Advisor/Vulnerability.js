import React from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import AccordionDetails from '@material-ui/core/AccordionDetails';

import { expandIcon } from 'react-feather';
import { useSelector } from 'react-redux';
import { Grid } from '@material-ui/core';
import { splitAndSpaceStr } from './advisorUtil';
import Tabs from '@material-ui/core/Tabs';
import Tab from '@material-ui/core/Tab';
import Typography from '@material-ui/core/Typography';
import { Box, Paper, makeStyles, Divider,TextField } from '@material-ui/core';
import Issues from './Issues';
import Inventory from './Inventory';


function TabPanel(props) {
    const { children, value, index, ...other } = props;
  
    return (
      <div
        role="tabpanel"
        hidden={value !== index}
        id={`simple-tabpanel-${index}`}
        aria-labelledby={`simple-tab-${index}`}
        {...other}
      >
        {value === index && (
          <Box sx={{ p: 3 }}>
            <Typography>{children}</Typography>
          </Box>
        )}
      </div>
    );
  }
  
  

  
  function a11yProps(index) {
    return {
      id: `simple-tab-${index}`,
      'aria-controls': `simple-tabpanel-${index}`,
    };
  }



const Vulnerability = () => {
    const [value, setValue] = React.useState(0);

    const vul = useSelector(state => Object.entries(state.advisor.advisoryResults.analysis.vulnerability));

    const searchTerm = useSelector(state=>state.advisor.searchTerm);

    const handleChange = (event, newValue) => {
        setValue(newValue);
      };

    return (<div style={{ overflowY: 'auto', height: '500px' }}>
        <Grid container>
            <Grid item xs={3} style={{ overflowY: 'auto' }}>
                {
                    Object.entries(vul[1][1]).map(([key, value]) => {
                        return (




                            <div style={{ display: 'flex' }}>
                                <div style={{ fontWeight: '600' }}>{splitAndSpaceStr(key)}</div> :   {typeof value == 'string' ? value : ''}
                            </div>





                        )
                    })
                }
            </Grid>

            <Grid item xs={9} style={{ overflowY: 'auto' }}>
                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
                
                    <Tabs value={value} onChange={handleChange} aria-label="basic tabs example">
                        <Tab label="Issues" {...a11yProps(0)} />
                        <Tab label="Inventory" {...a11yProps(1)} />
                       
                    </Tabs>
                </Box>
                <TabPanel value={value} index={0}>
                        <Issues />
                </TabPanel>
                <TabPanel value={value} index={1}>
                   <Inventory />
                </TabPanel>
               
            
        </Grid>
    </Grid>
        
    </div >)
}

export default Vulnerability;



